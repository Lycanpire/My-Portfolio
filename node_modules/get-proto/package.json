{
  "_from": "get-proto@^1.0.1",
  "_id": "get-proto@1.0.1",
  "_inBundle": false,
  "_integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
  "_location": "/get-proto",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "get-proto@^1.0.1",
    "name": "get-proto",
    "escapedName": "get-proto",
    "rawSpec": "^1.0.1",
    "saveSpec": null,
    "fetchSpec": "^1.0.1"
  },
  "_requiredBy": [
    "/array.prototype.findlastindex/es-abstract",
    "/array.prototype.findlastindex/get-intrinsic",
    "/array.prototype.findlastindex/regexp.prototype.flags",
    "/array.prototype.findlastindex/which-typed-array",
    "/array.prototype.flat/es-abstract",
    "/array.prototype.flat/get-intrinsic",
    "/array.prototype.flat/regexp.prototype.flags",
    "/array.prototype.flat/which-typed-array",
    "/arraybuffer.prototype.slice/es-abstract",
    "/arraybuffer.prototype.slice/get-intrinsic",
    "/arraybuffer.prototype.slice/regexp.prototype.flags",
    "/arraybuffer.prototype.slice/which-typed-array",
    "/call-bound/get-intrinsic",
    "/eslint-plugin-import/es-abstract",
    "/eslint-plugin-import/get-intrinsic",
    "/eslint-plugin-import/regexp.prototype.flags",
    "/eslint-plugin-import/which-typed-array",
    "/form-data/get-intrinsic",
    "/gatsby/es-abstract",
    "/gatsby/get-intrinsic",
    "/gatsby/regexp.prototype.flags",
    "/gatsby/which-typed-array",
    "/is-async-function",
    "/is-data-view/get-intrinsic",
    "/is-data-view/which-typed-array",
    "/is-generator-function",
    "/object.groupby/es-abstract",
    "/object.groupby/get-intrinsic",
    "/object.groupby/regexp.prototype.flags",
    "/object.groupby/which-typed-array",
    "/own-keys/get-intrinsic",
    "/reflect.getprototypeof",
    "/reflect.getprototypeof/es-abstract",
    "/reflect.getprototypeof/get-intrinsic",
    "/reflect.getprototypeof/regexp.prototype.flags",
    "/reflect.getprototypeof/which-typed-array",
    "/safe-array-concat/get-intrinsic",
    "/set-function-length/get-intrinsic",
    "/side-channel-map/get-intrinsic",
    "/side-channel-weakmap/get-intrinsic",
    "/string.prototype.includes/es-abstract",
    "/string.prototype.includes/get-intrinsic",
    "/string.prototype.includes/regexp.prototype.flags",
    "/string.prototype.includes/which-typed-array",
    "/typed-array-buffer/get-intrinsic",
    "/typed-array-buffer/which-typed-array",
    "/typed-array-byte-length/get-intrinsic",
    "/typed-array-byte-length/which-typed-array",
    "/typed-array-byte-offset/get-intrinsic",
    "/typed-array-byte-offset/which-typed-array",
    "/which-builtin-type/get-intrinsic",
    "/which-builtin-type/which-typed-array"
  ],
  "_resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
  "_shasum": "150b3f2743869ef3e851ec0c49d15b1d14d00ee1",
  "_spec": "get-proto@^1.0.1",
  "_where": "/Users/Akbar/Desktop/SAAS dev/My-Portfolio/node_modules/form-data/node_modules/get-intrinsic",
  "author": {
    "name": "Jordan Harband",
    "email": "ljharb@gmail.com"
  },
  "auto-changelog": {
    "output": "CHANGELOG.md",
    "template": "keepachangelog",
    "unreleased": false,
    "commitLimit": false,
    "backfillLimit": false,
    "hideCredit": true
  },
  "bugs": {
    "url": "https://github.com/ljharb/get-proto/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "dunder-proto": "^1.0.1",
    "es-object-atoms": "^1.0.0"
  },
  "deprecated": false,
  "description": "Robustly get the [[Prototype]] of an object",
  "devDependencies": {
    "@arethetypeswrong/cli": "^0.17.2",
    "@ljharb/eslint-config": "^21.1.1",
    "@ljharb/tsconfig": "^0.2.3",
    "@types/tape": "^5.8.0",
    "auto-changelog": "^2.5.0",
    "eslint": "=8.8.0",
    "evalmd": "^0.0.19",
    "in-publish": "^2.0.1",
    "npmignore": "^0.3.1",
    "nyc": "^10.3.2",
    "safe-publish-latest": "^2.0.0",
    "tape": "^5.9.0",
    "typescript": "next"
  },
  "engines": {
    "node": ">= 0.4"
  },
  "exports": {
    ".": "./index.js",
    "./Reflect.getPrototypeOf": "./Reflect.getPrototypeOf.js",
    "./Object.getPrototypeOf": "./Object.getPrototypeOf.js",
    "./package.json": "./package.json"
  },
  "homepage": "https://github.com/ljharb/get-proto#readme",
  "keywords": [
    "get",
    "proto",
    "prototype",
    "getPrototypeOf",
    "[[Prototype]]"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "get-proto",
  "publishConfig": {
    "ignore": [
      ".github/workflows"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ljharb/get-proto.git"
  },
  "scripts": {
    "lint": "eslint --ext=js,mjs .",
    "postlint": "tsc && attw -P",
    "posttest": "npx npm@\">=10.2\" audit --production",
    "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\"",
    "prelint": "evalmd README.md",
    "prepack": "npmignore --auto --commentLines=autogenerated",
    "prepublish": "not-in-publish || npm run prepublishOnly",
    "prepublishOnly": "safe-publish-latest",
    "pretest": "npm run --silent lint",
    "test": "npm run tests-only",
    "tests-only": "nyc tape 'test/**/*.js'",
    "version": "auto-changelog && git add CHANGELOG.md"
  },
  "testling": {
    "files": "test/index.js"
  },
  "version": "1.0.1"
}
